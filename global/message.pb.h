// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class JammerMessage;

// ===================================================================

class JammerMessage : public ::google::protobuf::Message {
 public:
  JammerMessage();
  virtual ~JammerMessage();

  JammerMessage(const JammerMessage& from);

  inline JammerMessage& operator=(const JammerMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JammerMessage& default_instance();

  void Swap(JammerMessage* other);

  // implements Message ----------------------------------------------

  inline JammerMessage* New() const { return New(NULL); }

  JammerMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JammerMessage& from);
  void MergeFrom(const JammerMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JammerMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double cpuUtil = 1;
  void clear_cpuutil();
  static const int kCpuUtilFieldNumber = 1;
  double cpuutil() const;
  void set_cpuutil(double value);

  // optional double gpuUtil = 2;
  void clear_gpuutil();
  static const int kGpuUtilFieldNumber = 2;
  double gpuutil() const;
  void set_gpuutil(double value);

  // optional double cpuMemUtil = 3;
  void clear_cpumemutil();
  static const int kCpuMemUtilFieldNumber = 3;
  double cpumemutil() const;
  void set_cpumemutil(double value);

  // optional double gpuMemUtil = 4;
  void clear_gpumemutil();
  static const int kGpuMemUtilFieldNumber = 4;
  double gpumemutil() const;
  void set_gpumemutil(double value);

  // @@protoc_insertion_point(class_scope:JammerMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double cpuutil_;
  double gpuutil_;
  double cpumemutil_;
  double gpumemutil_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static JammerMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// JammerMessage

// optional double cpuUtil = 1;
inline void JammerMessage::clear_cpuutil() {
  cpuutil_ = 0;
}
inline double JammerMessage::cpuutil() const {
  // @@protoc_insertion_point(field_get:JammerMessage.cpuUtil)
  return cpuutil_;
}
inline void JammerMessage::set_cpuutil(double value) {
  
  cpuutil_ = value;
  // @@protoc_insertion_point(field_set:JammerMessage.cpuUtil)
}

// optional double gpuUtil = 2;
inline void JammerMessage::clear_gpuutil() {
  gpuutil_ = 0;
}
inline double JammerMessage::gpuutil() const {
  // @@protoc_insertion_point(field_get:JammerMessage.gpuUtil)
  return gpuutil_;
}
inline void JammerMessage::set_gpuutil(double value) {
  
  gpuutil_ = value;
  // @@protoc_insertion_point(field_set:JammerMessage.gpuUtil)
}

// optional double cpuMemUtil = 3;
inline void JammerMessage::clear_cpumemutil() {
  cpumemutil_ = 0;
}
inline double JammerMessage::cpumemutil() const {
  // @@protoc_insertion_point(field_get:JammerMessage.cpuMemUtil)
  return cpumemutil_;
}
inline void JammerMessage::set_cpumemutil(double value) {
  
  cpumemutil_ = value;
  // @@protoc_insertion_point(field_set:JammerMessage.cpuMemUtil)
}

// optional double gpuMemUtil = 4;
inline void JammerMessage::clear_gpumemutil() {
  gpumemutil_ = 0;
}
inline double JammerMessage::gpumemutil() const {
  // @@protoc_insertion_point(field_get:JammerMessage.gpuMemUtil)
  return gpumemutil_;
}
inline void JammerMessage::set_gpumemutil(double value) {
  
  gpumemutil_ = value;
  // @@protoc_insertion_point(field_set:JammerMessage.gpuMemUtil)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
